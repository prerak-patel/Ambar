version: "2.1"
networks:
  internal_network:
services:      
  db:
    restart: always
    networks:
      - internal_network
    image: ${dockerRepo}/ambar-mongodb:latest
    environment:
      - cacheSizeGB=${dbCacheSizeGb}
    volumes:
      - ${dataPath}/db:/data/db
    expose:
      - "27017"
    ports:
      - "27017:27017"
  es:
    restart: always
    networks:
      - internal_network
    image: ${dockerRepo}/ambar-es:latest
    expose:
      - "9200"
    ports:
      - "9200:9200"
    environment:
      - cluster.name=ambar-es
      - ES_JAVA_OPTS=-Xms${esHeapSize} -Xmx${esHeapSize}
    ulimits:
      memlock:
        soft: -1
        hard: -1  
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - ${dataPath}/es:/usr/share/elasticsearch/data
  rabbit:
    restart: always
    networks:
      - internal_network
    image: ${dockerRepo}/ambar-rabbit:latest
    hostname: rabbit
    expose:
      - "15672"
      - "5672"
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - ${dataPath}/rabbit:/var/lib/rabbitmq
  redis:
    restart: always
    sysctls:
      - net.core.somaxconn=1024
    networks:
      - internal_network
    image: ${dockerRepo}/ambar-redis:latest
    expose:
      - "6379"
    ports:
      - "6379:6379" 
  webapi:
    depends_on:
      redis:
        condition: service_healthy
      rabbit:
        condition: service_healthy
      es:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: always
    networks:
      - internal_network
    image: ${dockerRepo}/ambar-webapi:latest
    expose:
      - "8080"
    environment:
      - dockerRepo=${dockerRepo}
      - db=mongodb://db:27017/ambar_data
      - fe=${protocol}://${host}:${port}
      - api=http://webapi:8080
      - es=http://es:9200
      - redis=redis
      - rabbit=amqp://rabbit
      - mode=${mode}
      - pipelineCount=${pipelineCount}
      - crawlerCount=${crawlerCount}
      - dropboxClientId=${dropboxClientId}
      - dropboxRedirectUri=${dropboxredirectUri}
      - defaultLangAnalyzer=${defaultLangAnalyzer}
      - analyticsToken=${analyticsToken}
      - auth=${auth}
      - ocrPdfMaxPageCount=${ocrPdfMaxPageCount}
      - ocrPdfSymbolsPerPageThreshold=${ocrPdfSymbolsPerPageThreshold}
      - nerEnabled=${nerEnabled}
      - uiLang=${uiLang}
      - preserveOriginals=${preserveOriginals}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  frontend:
    depends_on:
      webapi:
        condition: service_healthy
    image: ${dockerRepo}/ambar-frontend:latest
    restart: always
    networks:
      - internal_network
    expose:
      - "80"
    environment:
      - api=${protocol}://${host}:${port}
  proxy:
    depends_on:
      frontend:
        condition: service_healthy
    restart: always
    networks:
      - internal_network
    image: ${dockerRepo}/ambar-proxy:latest
    environment:
      - PORT=${port}
    expose:
      - ${port}           
    ports:
      - "${port}:${port}"

  
  